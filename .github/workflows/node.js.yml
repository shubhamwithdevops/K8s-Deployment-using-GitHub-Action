# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  compile:
    runs-on: Agent-1
    
    steps:
      - name: Checkout code  
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
         node-version: 23
      
      - name: Frontend Compilation (Syntax Check)
        run:   |
           cd client
           find . -name "*.js" -exec node --check {} \;

      - name: Backend Compilation (Syntax Check)
        run:   |
           cd api
           find . -name "*.js" -exec node --check {} \;     
            

  gitleaks-scan:
    needs: compile
    runs-on: Agent-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Gitleaks Setup
        uses: gitleaks/gitleaks-action@v2
      
      - name: Gitleaks Scan
        run: |
          gitleaks detect --source ./client --exit-code 1
          gitleaks detect --source ./api --exit-code 1

   
          
  trivy_fs_scan:
    runs-on: Agent-1
    needs: gitleaks-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'        
  
  sonarqube-frontend-scan:
    runs-on: Agent-1
    needs: trivy_fs_scan
    steps:
     - name: Checkout Code
       uses: actions/checkout@v4
     - name: SonarQube Scan (Client)
       uses: SonarSource/sonarqube-scan-action@master # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
       with:
        projectBaseDir : client
        args: >
          -Dsonar.projectKey=myorg_client
          -Dsonar.projectName=myorg_client
          -Dsonar.sources=.
          -Dsonar.exclusions=**/node_modules/**, **/dist/**, **/build/**
       env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          
          
  sonarqube-backend-scan:
    needs: sonarqube-frontend-scan
    runs-on: Agent-1
    steps:
     - name: Checkout Code
       uses: actions/checkout@v4
     - name: SonarQube Scan (Client)
       uses: SonarSource/sonarqube-scan-action@master # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
       with:
        projectBaseDir : api
        args: >
          -Dsonar.projectKey=myorg_api
          -Dsonar.projectName=myorg_api
          -Dsonar.sources=.
          "-Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**"
       env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}                